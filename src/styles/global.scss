@use "sass:color";
@use './colors.scss';
@use './mixins.scss';

@font-face {
    font-family: icons;
    src: url('./icons.woff2');
}
* {
    box-sizing: border-box;
    font-family: inherit;
    color: inherit;
}
html {
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen-Sans, Ubuntu,
        Cantarell, 'Helvetica Neue', sans-serif;
    font-size: 16px;
    color: colors.$dark;
    background: colors.$background;
    height: 100%;
}

$max-width: 700px;
body {
    margin: 0;
}
.g-container {
    position: relative;
    width: 100%;
    max-width: $max-width;
    margin: 0 auto;
    padding: 0 1em;
}
.g-container-small {
    position: relative;
    width: 100%;
    max-width: $max-width;
    margin: 0 auto;
    padding: 0 0.5em;
    @media (max-width: $max-width) {
        padding: 0;
    }
}

section {
    margin: 1em 0;
    &:first-child {
        margin-top: 0;
    }
    &:last-child {
        margin-bottom: 0;
    }
}
.label {
    margin-bottom: 0.5em;
}

input,
.input {
    @include mixins.input;
    font-size: inherit;
    display: flex;
    align-items: center;
    width: 100%;
    background: #fff;
    color: colors.$dark;
    border: 1px solid colors.$border;
    &::placeholder {
        color: colors.$placeholder;
    }
    &:focus {
        @include mixins.focus;
    }
    &.error {
        @include mixins.focus(colors.$error);
    }
}

button {
    @include mixins.input;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    &.primary {
        @include mixins.button(colors.$primary);
    }
    &.gray {
        @include mixins.button(colors.$gray);
    }
}

nav {
    position: sticky;
    top: 0;
    z-index: 5;
    > * {
        display: flex;
        justify-content: space-between;
    }
    button {
        $PERCENT: 10%;
        $color: colors.$gray;
        flex-basis: 0;
        flex-grow: 1;
        border-radius: 0;
        border: 1px solid color.scale($color, $lightness: -40%);
        border-top: 0;
        background: linear-gradient(
            to bottom,
            color.scale($color, $lightness: $PERCENT),
            color.scale($color, $lightness: -$PERCENT)
        );
        &:hover {
            background: linear-gradient(
                to bottom,
                color.scale($color, $lightness: $PERCENT - $PERCENT/2),
                color.scale($color, $lightness: -$PERCENT - $PERCENT/2)
            );
        }
        &:active {
            background: linear-gradient(
                to top,
                color.scale($color, $lightness: $PERCENT),
                color.scale($color, $lightness: -$PERCENT)
            );
        }
        &.active {
            border-bottom: 1px solid colors.$focus;
            box-shadow: 0 0.125em 0 0 color.change(colors.$focus, $alpha: 0.25);
        }
        &:first-of-type {
            border-bottom-left-radius: 3px;
        }
        &:last-of-type {
            border-bottom-right-radius: 3px;
        }
        @media (max-width: $max-width) {
            &:first-of-type {
                border-bottom-left-radius: 0;
                border-left: 0;
            }
            &:last-of-type {
                border-bottom-right-radius: 0;
                border-right: 0;
            }
        }
        &:not(:last-of-type):not(:first-of-type) {
            margin: 0 -1px;
        }
    }
}
